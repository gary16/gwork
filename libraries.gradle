/*
 * Use a libraries map to define the dependency artifacts
 * It similar to the maven <dependencyManagement>
 */
ext {
	
	
	springFrameworkVersion 					= '4.1.9.RELEASE'
	springDataJpaVersion 					= '1.6.0.RELEASE'
	springStateMachineVersion               = '1.2.14.RELEASE'

	
	slf4jVersion							= '1.7.7'
	logbackVersion							= '1.1.2'
	
	junitVersion 							= '4.11'
	
	orikaVersion							= '1.4.5'
	
	jackson2Version							= '2.4.6'
	mybatisVersion							= '3.2.7'
	mybatisSpringVersion					= '1.2.2'
	mybatisGeneratorVersion					= '1.3.2'
    druidVersion							= '1.0.5'
    mysqlDriverVersion						= '5.1.31'
	
	commonsLang3Version						= '3.3.2'
	commonsCollections4Version				= '4.0'
	commonsBeanutilsVersion					= '1.9.2'
	commonsPoolVersion						= '1.6'
	commonsCompressVersion					= '1.8.1'
	commonsFileuploadVersion				= '1.3.1'
	commonsHttpclientVersion               ='3.1'
	httpcomponentstVersion               ='4.5.1'
	

	
	groovyVersion							= '2.3.10'
	h2Version                               = '1.4.187'

	jedisVersion                            =  '2.9.0'
	springRedisVersion                      =  '1.6.2.RELEASE'
	
	fastjsonVersion                         =  '1.2.7'
	
	aspectjrtVersion                  ='1.8.10'
            
   // jackson2Version							= '2.7.3'
      jackson2Version							= '2.8.7'
            
    servletApiVersion						= '3.0.1'
	jspApiVersion							= '2.2.1'
	elApiVersion							= '2.2.5'
	jstlApiVersion							= '1.2.1'


	validationApiVersion					= '1.1.0.Final'
	hibernateValidatorVersion				= '5.1.1.Final'
	
	springbootVersion                              = '1.2.5.RELEASE'
	
	nettyVersion                               ='4.1.15.Final'
	
	guavaVersion                               ='19.0'
	
	zookeeperVersion                           ='3.4.9'
	
	curatorVersion                             ='2.9.1'
	
	libraries = [

			//spring base
            spring_context_support:    	"org.springframework:spring-context-support:${springFrameworkVersion}",
			//spring web
			spring_webmvc:			   	"org.springframework:spring-webmvc:${springFrameworkVersion}",
			//spring websocket
			spring_websocket:			   	"org.springframework:spring-websocket:${springFrameworkVersion}",
			//spring messaging
			spring_messaging:			   	"org.springframework:spring-messaging:${springFrameworkVersion}",
			//spring jdbc
			spring_jdbc:			   	"org.springframework:spring-jdbc:${springFrameworkVersion}",
			
			 //spring_data_jpa
            spring_data_jpa:		   	"org.springframework.data:spring-data-jpa:${springDataJpaVersion}",

			//spring_state_machie
			spring_state_machie:          "org.springframework.statemachine:spring-statemachine-core:${springStateMachineVersion}",
        
            
            slf4j_api:					"org.slf4j:slf4j-api:${slf4jVersion}",
            logback_classic:			"ch.qos.logback:logback-classic:${logbackVersion}",

		
			
			orika_core:					"ma.glasnost.orika:orika-core:${orikaVersion}",
			orika_eclipse_tools:		"ma.glasnost.orika:orika-eclipse-tools:${orikaVersion}",
		
			jackson_databind:			"com.fasterxml.jackson.core:jackson-databind:${jackson2Version}",
			
			//unit test
			spring_test:			   	"org.springframework:spring-test:${springFrameworkVersion}",
			junit:						"junit:junit:${junitVersion}",
		
			
			//mybatis
			mybatis:					"org.mybatis:mybatis:${mybatisVersion}",
			mybatis_spring:				"org.mybatis:mybatis-spring:${mybatisSpringVersion}",
			mybatis_generator:			"org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}",
			
			//apache commons
			commons_lang3:				"org.apache.commons:commons-lang3:${commonsLang3Version}",
			commons_collections4:		"org.apache.commons:commons-collections4:${commonsCollections4Version}",
			commons_beanutils:			"commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}",
			commons_pool:				"commons-pool:commons-pool:${commonsPoolVersion}",
			commons_compress:			"org.apache.commons:commons-compress:${commonsCompressVersion}",
			commons_fileupload:			"commons-fileupload:commons-fileupload:${commonsFileuploadVersion}",
			commons_httpclient:          "commons-httpclient:commons-httpclient:${commonsHttpclientVersion}",
			commons_httpcomponents:          "org.apache.httpcomponents:httpclient:${httpcomponentstVersion}",
			//druid
			druid:						"com.alibaba:druid:${druidVersion}",
			
			//mysql
			mysql:						"mysql:mysql-connector-java:${mysqlDriverVersion}",
       		
       	      		
       		//groovy
       		groovy_all:					"org.codehaus.groovy:groovy-all:${groovyVersion}",
       		
       	
       	
            h2:                         "com.h2database:h2:${h2Version}",
            fastjson:                   "com.alibaba:fastjson:${fastjsonVersion}",

             aspectjrt : "org.aspectj:aspectjrt:${aspectjrtVersion}",
             aspectjrtweaver : "org.aspectj:aspectjweaver:${aspectjrtVersion}",
             aspectjtools : "org.aspectj:aspectjtools:${aspectjrtVersion}",
             
             
             	servlet_api:				"javax.servlet:javax.servlet-api:${servletApiVersion}",
			jsp_api:					"javax.servlet.jsp:javax.servlet.jsp-api:${jspApiVersion}",
			el_api:						"javax.el:javax.el-api:${elApiVersion}",
			jstl_api:					"javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:${jstlApiVersion}",
			
				jackson2:			"com.fasterxml.jackson.core:jackson-databind:${jackson2Version}",
				
				validation_api:				"javax.validation:validation-api:${validationApiVersion}",
				hibernate_validator:		"org.hibernate:hibernate-validator:${hibernateValidatorVersion}",
				
				
             nettyApi:          "io.netty:netty-all:${nettyVersion}",
             
             guavaApi:         "com.google.guava:guava:${guavaVersion}",
             
             jedisApi:        "redis.clients:jedis:${jedisVersion}",
             springRedisApi:     "org.springframework.data:spring-data-redis:${springRedisVersion}",
             
			 
			 zookeeperApi:        "org.apache.zookeeper:zookeeper:${zookeeperVersion}",
			 
			 curatorRecipesApi:        "org.apache.curator:curator-recipes:${curatorVersion}",
			 
			 curatorFrameworkApi:        "org.apache.curator:curator-framework:${curatorVersion}",
			 
			 curatorClientApi:        "org.apache.curator:curator-client:${curatorVersion}",


			springbootparent:		"org.springframework.boot:spring-boot-starter-parent:${springbootVersion}",
			springbootstarter:		"org.springframework.boot:spring-boot-starter:${springbootVersion}",

        ]
    
}
